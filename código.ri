//Código de ejemplo
módulo código;

define e32 @inicio(r32 %pi)
{
sumas_literales_prueba1:
    %0 = llama e32 @suma_literales_naturales(0, 1, 1);
    %1 = cmp ig n32 %0, 1;
    slt n1 %1, :sumas_literales_prueba2;
    ret e32 -1;

sumas_literales_prueba2:
    %0 = llama e32 @suma_literales_naturales(288, 12, 300);
    %1 = cmp ig n32 %0, 1;
    slt n1 %1, :sumas_literales_prueba3;
    ret e32 -1;

sumas_literales_prueba3:
    %0 = llama e32 @suma_literales_naturales(42, 8, 50);
    %1 = cmp ig n32 %0, 1;
    slt n1 %1, :sumas_literales_prueba4;
    ret e32 -1;

sumas_literales_prueba4:
    %0 = llama e32 @suma_literales_naturales(100, 200, 300);
    %1 = cmp ig n32 %0, 1;
    slt n1 %1, :sumas_literales_fin;
    ret e32 -1;

sumas_literales_fin:
    ret e32 0;
}

@suma_literales_naturales_correcta_txt = "OK - op:sum con literales naturales\n";
@suma_literales_naturales_error_txt = "ERROR - op:sum con literales naturales\n";

define n32 @suma_literales_naturales(n32 %op1, n32 %op2, n32 %res)
{
suma_literales_naturales_empieza:
    %res_suma_literales_naturales = sum n32 %op1, %op2;
    %0 = cmp ig n32 %res_suma_literales_naturales, %res;

    slt n1 %0, :suma_literales_naturales_correcta;

suma_literales_naturales_error:
    llama nada @escribe(@suma_literales_naturales_error_txt);
    ret e32 0;

suma_literales_naturales_correcta:
    llama nada @escribe(@suma_literales_naturales_correcta_txt);
    slt :suma_literales_naturales_fin;

suma_literales_naturales_fin:
    ret e32 1;
}


define nada @escribe([0 x n32] %txt)
{
    // preparo el contador
    // para ponerlo a cero, guardo en él el resultado de 0+0
    %0 = sum e32 0, 0;

bucle:
    // obtengo un carácter de la lista %txt, el de la posición designada por %0
    %1 = leeval [6 x n32] %txt, %0;

    // incremento el contador
    %0 = sum e32 %0, 1;

    // escribo el carácter
    llama nada @#poncar(%1);

    // compruebo si el carácter es distinto a '\0'
    %2 = cmp dsig n32 %1, '\0';

    // mientras la comprobación sea cierta, salto a la etiqueta :bucle.
    slt n1 %2, :bucle;

    ret;
}