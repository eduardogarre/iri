módulo prueba;

@comparaciones_literales_error = "ERROR - op:cmp entre literales\n";

define e32 @inicio(r32 %pi)
{
    llama nada @escribe(@comparaciones_literales_error);

    ret e32 0;
}


define nada @escribe([0 x n32] %txt)
{
    // preparo el contador %i, y lo pongo a 0
    %ptr_i = rsrva n32;
    guarda n32 0, n32* %ptr_i;

bucle:
    // obtengo un carácter de la lista %txt, el de la posición designada por %ptr_i
    %0 = lee n32, n32* %ptr_i;
    %1 = leeval [6 x n32] %txt, %0;

    // compruebo si el carácter es '\0'
    %2 = cmp ig n32 %1, '\0';

    // si la comprobación es cierta, salto a la etiqueta :fin
    slt n1 %2, :fin;

    // si la comprobación es falsa, escribo el carácter, aumento el contador y reinicio el bucle
    llama nada @#poncar(%1);
    %3 = sum e32 %0, 1;
    guarda n32 %3, n32* %ptr_i;
    
    slt :bucle;

fin:
    ret;
}